from aiogram import Router, F
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.filters import Command
from database import get_user_balance, get_user_transactions, get_user
from config import MIN_WITHDRAWAL, WITHDRAWAL_FEE

router = Router()

@router.callback_query(F.data == "balance")
async def balance_menu(callback: CallbackQuery):
    user_id = callback.from_user.id
    balance = get_user_balance(user_id)
    user = get_user(user_id)
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="üí≥ –ü–æ–ø–æ–ª–Ω–∏—Ç—å", callback_data="deposit"),
            InlineKeyboardButton(text="üí∏ –í—ã–≤–µ—Å—Ç–∏", callback_data="withdraw")
        ],
        [
            InlineKeyboardButton(text="üìä –ò—Å—Ç–æ—Ä–∏—è", callback_data="transactions"),
            InlineKeyboardButton(text="üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="stats")
        ],
        [InlineKeyboardButton(text="üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
    ])
    
    balance_text = (
        f"üí∞ <b>–í–∞—à –±–∞–ª–∞–Ω—Å</b>\n\n"
        f"üíµ –û—Å–Ω–æ–≤–Ω–æ–π: {balance['main']:.2f} ‚ÇΩ\n"
        f"üéÅ –ë–æ–Ω—É—Å–Ω—ã–π: {balance['bonus']:.2f} ‚ÇΩ\n"
        f"üíé –û–±—â–∏–π: {balance['main'] + balance['bonus']:.2f} ‚ÇΩ\n\n"
        f"üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>\n"
        f"üéÆ –ò–≥—Ä —Å—ã–≥—Ä–∞–Ω–æ: {user['games_played']}\n"
        f"üí∞ –í—Å–µ–≥–æ –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–æ: {user['total_wagered']:.2f} ‚ÇΩ\n"
        f"üì• –ü–æ–ø–æ–ª–Ω–µ–Ω–æ: {user['total_deposited']:.2f} ‚ÇΩ\n"
        f"üì§ –í—ã–≤–µ–¥–µ–Ω–æ: {user['total_withdrawn']:.2f} ‚ÇΩ"
    )
    
    await callback.message.edit_text(balance_text, reply_markup=keyboard)

@router.callback_query(F.data == "deposit")
async def deposit_menu(callback: CallbackQuery):
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="‚Çø Bitcoin", callback_data="deposit_BTC"),
            InlineKeyboardButton(text="Œû Ethereum", callback_data="deposit_ETH")
        ],
        [
            InlineKeyboardButton(text="‚ÇÆ USDT", callback_data="deposit_USDT"),
            InlineKeyboardButton(text="≈Å Litecoin", callback_data="deposit_LTC")
        ],
        [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="balance")]
    ])
    
    await callback.message.edit_text(
        "üí≥ <b>–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞</b>\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è:\n\n"
        "‚ö° –°—Ä–µ–¥—Å—Ç–≤–∞ –ø–æ—Å—Ç—É–ø—è—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤ —Å–µ—Ç–∏\n"
        "üîí –í—Å–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∑–∞—â–∏—â–µ–Ω—ã –∏ –∞–Ω–æ–Ω–∏–º–Ω—ã",
        reply_markup=keyboard
    )

@router.callback_query(F.data.startswith("deposit_"))
async def show_deposit_address(callback: CallbackQuery):
    currency = callback.data.split("_")[1]
    address = CRYPTO_ADDRESSES.get(currency)
    
    if not address:
        await callback.answer("‚ùå –ê–¥—Ä–µ—Å –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="deposit")]
    ])
    
    currency_names = {
        'BTC': '‚Çø Bitcoin',
        'ETH': 'Œû Ethereum', 
        'USDT': '‚ÇÆ USDT',
        'LTC': '≈Å Litecoin'
    }
    
    deposit_text = (
        f"üí≥ <b>–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ {currency_names[currency]}</b>\n\n"
        f"üìã <b>–ê–¥—Ä–µ—Å –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è:</b>\n"
        f"<code>{address}</code>\n\n"
        f"‚ö†Ô∏è <b>–í–∞–∂–Ω–æ:</b>\n"
        f"‚Ä¢ –û—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ —Ç–æ–ª—å–∫–æ {currency} –Ω–∞ —ç—Ç–æ—Ç –∞–¥—Ä–µ—Å\n"
        f"‚Ä¢ –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞: —ç–∫–≤–∏–≤–∞–ª–µ–Ω—Ç 100 ‚ÇΩ\n"
        f"‚Ä¢ –°—Ä–µ–¥—Å—Ç–≤–∞ –∑–∞—á–∏—Å–ª—è—é—Ç—Å—è –ø–æ—Å–ª–µ 1 –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è\n"
        f"‚Ä¢ –û–±—ã—á–Ω–æ —ç—Ç–æ –∑–∞–Ω–∏–º–∞–µ—Ç 10-30 –º–∏–Ω—É—Ç\n\n"
        f"üí° –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∞–¥—Ä–µ—Å –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–∞ –Ω–µ–≥–æ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É"
    )
    
    await callback.message.edit_text(deposit_text, reply_markup=keyboard)

@router.callback_query(F.data == "withdraw")
async def withdraw_menu(callback: CallbackQuery):
    user_id = callback.from_user.id
    balance = get_user_balance(user_id)
    
    if balance['main'] < MIN_WITHDRAWAL:
        await callback.answer(f"‚ùå –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞: {MIN_WITHDRAWAL} ‚ÇΩ")
        return
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="‚Çø Bitcoin", callback_data="withdraw_BTC"),
            InlineKeyboardButton(text="Œû Ethereum", callback_data="withdraw_ETH")
        ],
        [
            InlineKeyboardButton(text="‚ÇÆ USDT", callback_data="withdraw_USDT"),
            InlineKeyboardButton(text="≈Å Litecoin", callback_data="withdraw_LTC")
        ],
        [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="balance")]
    ])
    
    fee_amount = balance['main'] * WITHDRAWAL_FEE
    after_fee = balance['main'] - fee_amount
    
    withdraw_text = (
        f"üí∏ <b>–í—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤</b>\n\n"
        f"üí∞ –î–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è –≤—ã–≤–æ–¥–∞: {balance['main']:.2f} ‚ÇΩ\n"
        f"üí≥ –ö–æ–º–∏—Å—Å–∏—è: {WITHDRAWAL_FEE*100}% ({fee_amount:.2f} ‚ÇΩ)\n"
        f"üíµ –ö –ø–æ–ª—É—á–µ–Ω–∏—é: {after_fee:.2f} ‚ÇΩ\n\n"
        f"‚ö° –í—ã–ø–ª–∞—Ç—ã –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤\n"
        f"üîí –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞: {MIN_WITHDRAWAL} ‚ÇΩ\n\n"
        f"–í—ã–±–µ—Ä–∏—Ç–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É:"
    )
    
    await callback.message.edit_text(withdraw_text, reply_markup=keyboard)

@router.callback_query(F.data.startswith("withdraw_"))
async def process_withdraw(callback: CallbackQuery):
    currency = callback.data.split("_")[1]
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="withdraw")]
    ])
    
    currency_names = {
        'BTC': '‚Çø Bitcoin',
        'ETH': 'Œû Ethereum',
        'USDT': '‚ÇÆ USDT', 
        'LTC': '≈Å Litecoin'
    }
    
    await callback.message.edit_text(
        f"üí∏ <b>–í—ã–≤–æ–¥ {currency_names[currency]}</b>\n\n"
        f"üìù –ù–∞–ø–∏—à–∏—Ç–µ –∞–¥—Ä–µ—Å –∫–æ—à–µ–ª—å–∫–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞ {currency}\n\n"
        f"‚ö†Ô∏è <b>–í–Ω–∏–º–∞–Ω–∏–µ:</b>\n"
        f"‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∞–¥—Ä–µ—Å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑\n"
        f"‚Ä¢ –ù–µ–≤–µ—Ä–Ω—ã–π –∞–¥—Ä–µ—Å = –ø–æ—Ç–µ—Ä—è —Å—Ä–µ–¥—Å—Ç–≤\n"
        f"‚Ä¢ –ú—ã –Ω–µ –Ω–µ—Å–µ–º –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∑–∞ –æ—à–∏–±–∫–∏ –≤ –∞–¥—Ä–µ—Å–µ",
        reply_markup=keyboard
    )

@router.callback_query(F.data == "transactions")
async def show_transactions(callback: CallbackQuery):
    user_id = callback.from_user.id
    transactions = get_user_transactions(user_id, 10)
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="balance")]
    ])
    
    if not transactions:
        await callback.message.edit_text(
            "üìä <b>–ò—Å—Ç–æ—Ä–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π</b>\n\n"
            "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π",
            reply_markup=keyboard
        )
        return
    
    transactions_text = "üìä <b>–ò—Å—Ç–æ—Ä–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π</b>\n\n"
    
    for t in transactions[:10]:
        amount_str = f"+{t['amount']:.2f}" if t['amount'] > 0 else f"{t['amount']:.2f}"
        emoji = "üí∞" if t['amount'] > 0 else "üí∏"
        
        transactions_text += (
            f"{emoji} {amount_str} ‚ÇΩ - {t['description']}\n"
            f"üìÖ {t['timestamp'][:16]}\n\n"
        )
    
    await callback.message.edit_text(transactions_text, reply_markup=keyboard)

@router.callback_query(F.data == "referrals")
async def referrals_menu(callback: CallbackQuery):
    user_id = callback.from_user.id
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
    ])
    
    referral_link = f"https://t.me/your_bot_username?start={user_id}"
    
    referrals_text = (
        f"üë• <b>–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞</b>\n\n"
        f"üéÅ –ü–æ–ª—É—á–∞–π—Ç–µ 10% —Å –∫–∞–∂–¥–æ–≥–æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤!\n\n"
        f"üîó <b>–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:</b>\n"
        f"<code>{referral_link}</code>\n\n"
        f"üìã <b>–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:</b>\n"
        f"‚Ä¢ –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å—Å—ã–ª–∫–æ–π —Å –¥—Ä—É–∑—å—è–º–∏\n"
        f"‚Ä¢ –û–Ω–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É—é—Ç—Å—è –ø–æ –≤–∞—à–µ–π —Å—Å—ã–ª–∫–µ\n"
        f"‚Ä¢ –í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ 10% —Å –∏—Ö –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–π\n"
        f"‚Ä¢ –ë–æ–Ω—É—Å—ã –Ω–∞—á–∏—Å–ª—è—é—Ç—Å—è –Ω–∞ –±–æ–Ω—É—Å–Ω—ã–π –±–∞–ª–∞–Ω—Å\n\n"
        f"üí° –ß–µ–º –±–æ–ª—å—à–µ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤, —Ç–µ–º –±–æ–ª—å—à–µ –¥–æ—Ö–æ–¥!"
    )
    
    await callback.message.edit_text(referrals_text, reply_markup=keyboard)

@router.callback_query(F.data == "profile")
async def profile_menu(callback: CallbackQuery):
    user_id = callback.from_user.id
    user = get_user(user_id)
    balance = get_user_balance(user_id)
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
    ])
    
    # –í—ã—á–∏—Å–ª—è–µ–º –ø—Ä–∏–±—ã–ª—å/—É–±—ã—Ç–æ–∫
    profit_loss = balance['main'] + balance['bonus'] + user['total_withdrawn'] - user['total_deposited']
    profit_emoji = "üìà" if profit_loss >= 0 else "üìâ"
    
    profile_text = (
        f"üìä <b>–ü—Ä–æ—Ñ–∏–ª—å –∏–≥—Ä–æ–∫–∞</b>\n\n"
        f"üë§ {user['full_name']}\n"
        f"üÜî ID: {user['user_id']}\n"
        f"üìÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è: {user['registration_date'][:10]}\n\n"
        f"üí∞ <b>–ë–∞–ª–∞–Ω—Å—ã:</b>\n"
        f"üíµ –û—Å–Ω–æ–≤–Ω–æ–π: {balance['main']:.2f} ‚ÇΩ\n"
        f"üéÅ –ë–æ–Ω—É—Å–Ω—ã–π: {balance['bonus']:.2f} ‚ÇΩ\n\n"
        f"üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>\n"
        f"üéÆ –ò–≥—Ä —Å—ã–≥—Ä–∞–Ω–æ: {user['games_played']}\n"
        f"üí∞ –í—Å–µ–≥–æ –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–æ: {user['total_wagered']:.2f} ‚ÇΩ\n"
        f"üì• –ü–æ–ø–æ–ª–Ω–µ–Ω–æ: {user['total_deposited']:.2f} ‚ÇΩ\n"
        f"üì§ –í—ã–≤–µ–¥–µ–Ω–æ: {user['total_withdrawn']:.2f} ‚ÇΩ\n"
        f"{profit_emoji} –ü—Ä–∏–±—ã–ª—å/–£–±—ã—Ç–æ–∫: {profit_loss:+.2f} ‚ÇΩ"
    )
    
    await callback.message.edit_text(profile_text, reply_markup=keyboard)
