from aiogram import Router, F
from aiogram.types import CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from database import get_user_balance, get_user_transactions, get_user
from config import MIN_WITHDRAWAL, WITHDRAWAL_FEE
from crypto_api import create_invoice

router = Router()

@router.callback_query(F.data == "balance")
async def balance_menu(callback: CallbackQuery):
    user_id = callback.from_user.id
    balance = get_user_balance(user_id)
    user = get_user(user_id)

    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="üí≥ –ü–æ–ø–æ–ª–Ω–∏—Ç—å", callback_data="deposit"),
            InlineKeyboardButton(text="üí∏ –í—ã–≤–µ—Å—Ç–∏", callback_data="withdraw")
        ],
        [
            InlineKeyboardButton(text="üìä –ò—Å—Ç–æ—Ä–∏—è", callback_data="transactions"),
            InlineKeyboardButton(text="üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="stats")
        ],
        [InlineKeyboardButton(text="üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
    ])

    balance_text = (
        f"üí∞ <b>–í–∞—à –±–∞–ª–∞–Ω—Å</b>\n\n"
        f"üíµ –û—Å–Ω–æ–≤–Ω–æ–π: {balance['main']:.2f} ‚ÇΩ\n"
        f"üéÅ –ë–æ–Ω—É—Å–Ω—ã–π: {balance['bonus']:.2f} ‚ÇΩ\n"
        f"üíé –û–±—â–∏–π: {balance['main'] + balance['bonus']:.2f} ‚ÇΩ\n\n"
        f"üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>\n"
        f"üéÆ –ò–≥—Ä —Å—ã–≥—Ä–∞–Ω–æ: {user['games_played']}\n"
        f"üí∞ –í—Å–µ–≥–æ –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–æ: {user['total_wagered']:.2f} ‚ÇΩ\n"
        f"üì• –ü–æ–ø–æ–ª–Ω–µ–Ω–æ: {user['total_deposited']:.2f} ‚ÇΩ\n"
        f"üì§ –í—ã–≤–µ–¥–µ–Ω–æ: {user['total_withdrawn']:.2f} ‚ÇΩ"
    )

    await callback.message.edit_text(balance_text, reply_markup=keyboard)

@router.callback_query(F.data == "deposit")
async def deposit_menu(callback: CallbackQuery):
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="‚Çø Bitcoin", callback_data="deposit_BTC"),
            InlineKeyboardButton(text="Œû Ethereum", callback_data="deposit_ETH")
        ],
        [
            InlineKeyboardButton(text="‚ÇÆ USDT", callback_data="deposit_USDT"),
            InlineKeyboardButton(text="≈Å Litecoin", callback_data="deposit_LTC")
        ],
        [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="balance")]
    ])

    await callback.message.edit_text(
        "üí≥ <b>–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞</b>\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è:\n\n"
        "‚ö° –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã —Å—É–º–º–∞ –ø–æ—Å—Ç—É–ø–∏—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏\n"
        "üîí –í—Å–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∑–∞—â–∏—â–µ–Ω—ã –∏ –∞–Ω–æ–Ω–∏–º–Ω—ã",
        reply_markup=keyboard
    )

@router.callback_query(F.data.startswith("deposit_"))
async def show_deposit_invoice(callback: CallbackQuery):
    currency = callback.data.split("_")[1]
    user_id = callback.from_user.id

    invoice = await 
create_invoice(user_id, currency)
    if not invoice or "pay_url" not in invoice:
    await 
        callback.answer("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —á–µ–∫–∞!", show_alert=True)
    return

    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üí∏ –ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ", url=invoice["pay_url"])],
        [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="deposit")]
    ])

    await callback.message.edit_text(
        f"üí≥ <b>–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ {currency}</b>\n\n"
        f"üîó –ß–µ–∫ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ –¥–ª—è –æ–ø–ª–∞—Ç—ã.\n"
        f"‚ö†Ô∏è –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ ‚Äî 0.1 USD",
        reply_markup=keyboard
    )

@router.callback_query(F.data == "withdraw")
async def withdraw_menu(callback: CallbackQuery):
    user_id = callback.from_user.id
    balance = get_user_balance(user_id)

    if balance['main'] < MIN_WITHDRAWAL:
        await callback.answer(f"‚ùå –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞: {MIN_WITHDRAWAL} ‚ÇΩ")
        return

    fee_amount = balance['main'] * WITHDRAWAL_FEE
    after_fee = balance['main'] - fee_amount

    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="‚Çø Bitcoin", callback_data="withdraw_BTC"),
            InlineKeyboardButton(text="Œû Ethereum", callback_data="withdraw_ETH")
        ],
        [
            InlineKeyboardButton(text="‚ÇÆ USDT", callback_data="withdraw_USDT"),
            InlineKeyboardButton(text="≈Å Litecoin", callback_data="withdraw_LTC")
        ],
        [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="balance")]
    ])

    withdraw_text = (
        f"üí∏ <b>–í—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤</b>\n\n"
        f"üí∞ –î–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è –≤—ã–≤–æ–¥–∞: {balance['main']:.2f} ‚ÇΩ\n"
        f"üí≥ –ö–æ–º–∏—Å—Å–∏—è: {WITHDRAWAL_FEE*100}% ({fee_amount:.2f} ‚ÇΩ)\n"
        f"üíµ –ö –ø–æ–ª—É—á–µ–Ω–∏—é: {after_fee:.2f} ‚ÇΩ\n\n"
        f"‚ö° –í—ã–ø–ª–∞—Ç—ã –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤\n"
        f"üîí –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞: {MIN_WITHDRAWAL} ‚ÇΩ\n\n"
        f"–í—ã–±–µ—Ä–∏—Ç–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É:"
    )

    await callback.message.edit_text(withdraw_text, reply_markup=keyboard)

@router.callback_query(F.data.startswith("withdraw_"))
async def process_withdraw(callback: CallbackQuery):
    currency = callback.data.split("_")[1]
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="withdraw")]
    ])

    await callback.message.edit_text(
        f"üí∏ <b>–í—ã–≤–æ–¥ {currency}</b>\n\n"
        f"üìù –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∞–¥—Ä–µ—Å –∫–æ—à–µ–ª—å–∫–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ä–µ–¥—Å—Ç–≤\n"
        f"‚ö†Ô∏è –ë—É–¥—å—Ç–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã: –æ—à–∏–±–∫–∏ –≤ –∞–¥—Ä–µ—Å–µ –º–æ–≥—É—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ –ø–æ—Ç–µ—Ä–µ —Å—Ä–µ–¥—Å—Ç–≤",
        reply_markup=keyboard
    )
